/*
 * This source file was generated by the Gradle 'init' task
 */
package ticket.booking;

import ticket.booking.entities.Train;
import ticket.booking.entities.User;
import ticket.booking.services.UserBookingService;
import ticket.booking.utils.UserServiceUtil;

import javax.swing.plaf.synth.SynthTextAreaUI;
import java.io.IOException;
import java.util.*;

public class App {


    public static void main(String[] args) {
        System.out.println("Running Train Booking System");

        Scanner scanner = new Scanner(System.in);

        int option = 0;

        UserBookingService userBookingService;
// TODO: REVISIT

//        try{
//         userBookingService = new UserBookingService();
//        }catch(IOException e){
//          System.out.println("Something went wrong");
//          return;
        userBookingService = new UserBookingService();
        Train trainSelectedForBooking = new Train();
        while(option != 7){
            System.out.println("Please enter your option");
            System.out.println("1 - Sign Up");
            System.out.println("2 - Login");
            System.out.println("3 - Fetch Booking");
            System.out.println("4 - Search Trains");
            System.out.println("5 - Book a Seat");
            System.out.println("6 - Cancel My Booking");
            System.out.println("7 - Exit");

            option = scanner.nextInt();




            switch(option){
                case 1:
                    System.out.println("Enter the username to signup");
                    String nameToSignUp = scanner.next();
                    System.out.println("Enter the password to signup");
                    String passwordToSignUp = scanner.next();
                    User userToSignUp = new User(nameToSignUp,passwordToSignUp, UserServiceUtil.hashPassword(passwordToSignUp),new ArrayList<>(), UUID.randomUUID().toString());
                    userBookingService.signUp(userToSignUp);
                    break;
                case 2:
                    System.out.println("Enter the username to login");
                    String nameToLogin = scanner.next();
                    System.out.println("Enter the password to login");
                    String passwordToLogin = scanner.next();
                    User userToLogin = new User(nameToLogin,passwordToLogin,UserServiceUtil.hashPassword(passwordToLogin),new ArrayList<>(), UUID.randomUUID().toString());
//                    System.out.println(userToLogin);
                    try{
                        userBookingService = new UserBookingService(userToLogin);
                        userBookingService.loginUser();
                        System.out.println(userBookingService.loginUser());
                    }catch (IOException err){
                        System.out.println("Something went wrong in Login"+err);
                        return;
                    }
                    break;
                case 3:
                    System.out.println("Fetching your bookings");
                    userBookingService.fetchBookings();
                    break;
                case 4:
                    System.out.println("Type your source station");
                    String source = scanner.next();
                    System.out.println("Type your destination station");
                    String dest = scanner.next();
                    List<Train> trains = userBookingService.getTrains(source,dest);
                    int index = 1;
                    for(Train t:trains){
                        System.out.println(index + " " + "Train id: " + t.getTrainId());
                        for(Map.Entry<String,String> entry : t.getStationTimes().entrySet()){
                            System.out.println("station " + entry.getKey() + " time: "+ entry.getValue());
                        }
                        index++;
                    }
                    System.out.println(" Select a train by typing 1,2,3...");
                    trainSelectedForBooking = trains.get(scanner.nextInt()-1);
//
//                    System.out.println(trainSelectedForBooking.getTrainId());
                    break;
                case 5:
                    System.out.println("Select a seat out of these seats");
                    List<List<Integer>> seats = userBookingService.fetchSeats(trainSelectedForBooking);
                    for(List<Integer> row:seats){
                        for(Integer val:row){
                            System.out.print(val + " ");
                        }
                        System.out.println();
                    }
                    System.out.println(" Select the seat by typing the row and column");
                    System.out.println("Enter the row");
                    int row = scanner.nextInt();
                    System.out.println("Enter the column");
                    int col = scanner.nextInt();
                    System.out.println("Booking your seat...");
                    // ## TODO:
                    try{
                        Boolean booked = userBookingService.bookTrainSeat(trainSelectedForBooking,row,col);
                        if(booked.equals(Boolean.TRUE)){
                            System.out.println("Booked! Enjoy your journey");
                        }else{
                            System.out.println("Sorry, Can't book this seat");
                        }
                    }catch (IOException err){
                        System.out.println("Something went wrong in Booking "+err);
                    }

                    break;
                case 6:
                    System.out.println("Enter the ticket Id you want to cancel");
                    try{
                        String ticketId = scanner.next();
                        userBookingService.cancelTicket(ticketId);
                    }catch (IOException err){
                        System.out.println("Something went wrong in cancel"+err);
                        return;
                    }

                default:
                break;


            }


        }



    }
}
